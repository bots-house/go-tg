// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdminSettingsGarant admin settings garant
//
// swagger:model AdminSettingsGarant
type AdminSettingsGarant struct {

	// имя гаранта
	// Required: true
	Name *string `json:"name"`

	// username гаранта
	// Required: true
	Username *string `json:"username"`

	// username канала с отызывами
	// Required: true
	ReviewsChannel *string `json:"reviews_channel"`

	// процент от сделки
	// Required: true
	PercentageDeal *float64 `json:"percentage_deal"`

	// процент от сделки (на период скидки)
	// Required: true
	PercentageDealOfDiscountPeriod *float64 `json:"percentage_deal_of_discount_period"`

	// ссылка на аватарку гаранта (может быть null)
	// Required: true
	AvatarURL *string `json:"avatar_url"`
}

// Validate validates this admin settings garant
func (m *AdminSettingsGarant) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReviewsChannel(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePercentageDeal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePercentageDealOfDiscountPeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvatarURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdminSettingsGarant) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *AdminSettingsGarant) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

func (m *AdminSettingsGarant) validateReviewsChannel(formats strfmt.Registry) error {

	if err := validate.Required("reviews_channel", "body", m.ReviewsChannel); err != nil {
		return err
	}

	return nil
}

func (m *AdminSettingsGarant) validatePercentageDeal(formats strfmt.Registry) error {

	if err := validate.Required("percentage_deal", "body", m.PercentageDeal); err != nil {
		return err
	}

	return nil
}

func (m *AdminSettingsGarant) validatePercentageDealOfDiscountPeriod(formats strfmt.Registry) error {

	if err := validate.Required("percentage_deal_of_discount_period", "body", m.PercentageDealOfDiscountPeriod); err != nil {
		return err
	}

	return nil
}

func (m *AdminSettingsGarant) validateAvatarURL(formats strfmt.Registry) error {

	if err := validate.Required("avatar_url", "body", m.AvatarURL); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdminSettingsGarant) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdminSettingsGarant) UnmarshalBinary(b []byte) error {
	var res AdminSettingsGarant
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
