// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InputPost input post
//
// swagger:model InputPost
type InputPost struct {

	// ID лота.
	LotID int64 `json:"lot_id,omitempty"`

	// Текст поста.
	// Required: true
	Text *string `json:"text"`

	// Название поста.
	Title string `json:"title,omitempty"`

	// Отключить или выключить web page preview.
	// Required: true
	DisableWebPagePreview *bool `json:"disable_web_page_preview"`

	// Время планирования поста.
	ScheduledAt int64 `json:"scheduled_at,omitempty"`
}

// Validate validates this input post
func (m *InputPost) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateText(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisableWebPagePreview(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InputPost) validateText(formats strfmt.Registry) error {

	if err := validate.Required("text", "body", m.Text); err != nil {
		return err
	}

	return nil
}

func (m *InputPost) validateDisableWebPagePreview(formats strfmt.Registry) error {

	if err := validate.Required("disable_web_page_preview", "body", m.DisableWebPagePreview); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InputPost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InputPost) UnmarshalBinary(b []byte) error {
	var res InputPost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
