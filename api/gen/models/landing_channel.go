// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LandingChannel landing channel
//
// swagger:model LandingChannel
type LandingChannel struct {

	// Заголовок канала.
	// Required: true
	Title *string `json:"title"`

	// Количество подписчиков в канале.
	// Required: true
	MembersCount *int64 `json:"members_count"`

	// Ссылка на канал.
	// Required: true
	JoinLink *string `json:"join_link"`

	// Ссылка на аватарку канала.
	// Required: true
	Avatar *string `json:"avatar"`

	// Юзернейм канала.
	// Required: true
	PublicUsername *string `json:"public_username"`
}

// Validate validates this landing channel
func (m *LandingChannel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMembersCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJoinLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAvatar(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePublicUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LandingChannel) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

func (m *LandingChannel) validateMembersCount(formats strfmt.Registry) error {

	if err := validate.Required("members_count", "body", m.MembersCount); err != nil {
		return err
	}

	return nil
}

func (m *LandingChannel) validateJoinLink(formats strfmt.Registry) error {

	if err := validate.Required("join_link", "body", m.JoinLink); err != nil {
		return err
	}

	return nil
}

func (m *LandingChannel) validateAvatar(formats strfmt.Registry) error {

	if err := validate.Required("avatar", "body", m.Avatar); err != nil {
		return err
	}

	return nil
}

func (m *LandingChannel) validatePublicUsername(formats strfmt.Registry) error {

	if err := validate.Required("public_username", "body", m.PublicUsername); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LandingChannel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LandingChannel) UnmarshalBinary(b []byte) error {
	var res LandingChannel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
