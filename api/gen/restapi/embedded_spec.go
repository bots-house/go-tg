// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Birzzha",
    "version": "v1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/auth": {
      "post": {
        "security": [],
        "description": "Получение JWT-токена на основе данных авторизации от Telegram,\nполученных c [Telegram Login Widget](https://core.telegram.org/widgets/login) и [LoginUrl](https://core.telegram.org/bots/api#loginurl).\nТокен действителен в течении 24 часов, с момента создания.\n\nВозможные ошибки:\n  - ` + "`" + `telegram_widget_info_expired` + "`" + ` - если с момента получение данных с виджета прошло более 1 минуты;\n  - ` + "`" + `telegram_widget_info_invalid` + "`" + ` - если подпись данных (` + "`" + `hash` + "`" + `) невалидна;\n",
        "tags": [
          "auth"
        ],
        "summary": "Create Token",
        "operationId": "createToken",
        "parameters": [
          {
            "$ref": "#/parameters/RequestID"
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InputAuth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/bot": {
      "get": {
        "security": [],
        "description": "При переходе по этой ссылке пользователь будет перенаправлен в Telegram. Telegram бот перенаправит его на ` + "`" + `callback_url` + "`" + ` вместе с данными [LoginUrl](https://core.telegram.org/bots/api/#loginurl).",
        "tags": [
          "auth"
        ],
        "summary": "Login via Bot",
        "operationId": "loginViaBot",
        "parameters": [
          {
            "$ref": "#/parameters/RequestID"
          },
          {
            "type": "string",
            "format": "url",
            "description": "URL для возврата",
            "name": "callback_url",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "type": "string",
                "format": "url"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bot": {
      "get": {
        "security": [],
        "description": "Получение информации о боте\n",
        "tags": [
          "bot"
        ],
        "summary": "Get Bot Info",
        "operationId": "getBotInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BotInfo"
            }
          }
        }
      },
      "post": {
        "security": [],
        "description": "Обработка события от Telegram. S2S метод.\n",
        "tags": [
          "bot"
        ],
        "summary": "Handle Update",
        "operationId": "handleUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/RequestID"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelegramUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lot": {
      "post": {
        "description": "Создание лота.\nПредварительно нужно получить ID канала через метод ` + "`" + `/tg/resolve` + "`" + ` и отправить его в запросе как ` + "`" + `telegram_id` + "`" + `.\n\n### Возможные ошибки\n\n| Status | Code | Description |\n|:---------|:--------------|:-----------------|\n| 400 | ` + "`" + `lot_is_not_channel` + "`" + ` | лот не является каналом |\n| 500 | ` + "`" + `internal_error` + "`" + ` | Внутреняя ошибка сервера |\n",
        "tags": [
          "catalog"
        ],
        "summary": "Create Lot",
        "operationId": "createLot",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LotInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OwnedLot"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tg/resolve": {
      "get": {
        "security": [],
        "description": "Возвращает информацию о Telegram-сущности (каналы и чат) по @username или приватной ссылке (в разработке).\nНаписание ссылки или @username **не важно** (есть протокол или нет, домен, @ в начала).\n\n### Пример запросов\n\n  - https://t.me/channely_updates\n  - t.me/crosser_live\n  - crosser_chat\n  - @zzapusk\n\n### Возможные ошибки\n\n| Status | Code | Description |\n|:---------|:--------------|:-----------------|\n| 400 | ` + "`" + `tg_invalid_query` + "`" + ` | Недопустимый формат ввода |\n| 400 | ` + "`" + `tg_entity_not_found` + "`" + ` | Сущность не найдена |\n| 500 | ` + "`" + `internal_error` + "`" + ` | Внутреняя ошибка сервера |\n",
        "tags": [
          "catalog"
        ],
        "summary": "Resolve Telegram Identity",
        "operationId": "resolveTelegram",
        "parameters": [
          {
            "$ref": "#/parameters/RequestID"
          },
          {
            "type": "string",
            "description": "запрос пользователя",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TelegramResolveResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/topics": {
      "get": {
        "security": [],
        "description": "Получить список категорий.",
        "tags": [
          "catalog"
        ],
        "summary": "Get Topics",
        "operationId": "getTopics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Topic"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Возвращает информацию о текущем пользователе.",
        "tags": [
          "auth"
        ],
        "summary": "Get Current User",
        "operationId": "getUser",
        "parameters": [
          {
            "$ref": "#/parameters/RequestID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BotInfo": {
      "description": "Информация о боте",
      "required": [
        "name",
        "username",
        "auth_deep_link"
      ],
      "properties": {
        "auth_deep_link": {
          "description": "Значение параметра ` + "`" + `?start=` + "`" + ` который нужно передать при формировании URL для авторизации через ` + "`" + `LoginUrl` + "`" + `.",
          "type": "string",
          "x-order": 2
        },
        "name": {
          "description": "Имя бота",
          "type": "string",
          "x-order": 0
        },
        "username": {
          "description": "Юзернейм бота",
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "description": "Код ошибки",
          "type": "string",
          "enum": [
            "test"
          ],
          "x-order": 0
        },
        "description": {
          "description": "Описание ошибки",
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Identity": {
      "x-go-type": {
        "import": {
          "alias": "authz",
          "package": "github.com/bots-house/birzzha/api/authz"
        },
        "type": "Identity"
      }
    },
    "InputAuth": {
      "description": "Данный полученные с [Telegram Login Widget](https://core.telegram.org/widgets/login) и [LoginUrl](https://core.telegram.org/bots/api#loginurl).",
      "required": [
        "id",
        "first_name",
        "auth_date",
        "hash"
      ],
      "properties": {
        "auth_date": {
          "description": "Дата авторизации пользователя (UNIX)",
          "type": "integer",
          "format": "int64",
          "x-order": 5
        },
        "first_name": {
          "description": "Имя пользователя в Telegram",
          "type": "string",
          "x-order": 1,
          "example": "Sasha"
        },
        "hash": {
          "description": "Подписи к данным.",
          "type": "string",
          "x-order": 6
        },
        "id": {
          "description": "ID пользователя в Telegram",
          "type": "integer",
          "x-order": 0,
          "example": 492933123
        },
        "last_name": {
          "description": "Фамилия пользователя в Telegram",
          "type": "string",
          "x-order": 2,
          "example": "Savchuk"
        },
        "photo_url": {
          "description": "Ссылка на авартку пользователя.",
          "type": "string",
          "format": "url",
          "x-order": 4
        },
        "username": {
          "description": "Username пользователя в Telegram",
          "type": "string",
          "x-order": 3
        }
      }
    },
    "LotExtraResource": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "x-order": 0
        }
      }
    },
    "LotInput": {
      "description": "Данные для создания нового лота",
      "type": "object",
      "required": [
        "query",
        "telegram_id",
        "topic_ids",
        "price",
        "is_bargain",
        "monthly_income",
        "comment",
        "extra"
      ],
      "properties": {
        "comment": {
          "description": "Комментарий пользователя",
          "type": "string",
          "x-order": 6,
          "example": "Продаю дешевле, чем залил. Каналу месяц, налит свежим тг трафом за две недели. В канал вложено 250.000-260.000₽. Рекламу продаю последние 2 недели. Продаю, так как сам в телеграмме недавно, так поигрались с партнером, посмотрели что к чему, идем дальше!\n"
        },
        "extra": {
          "description": "Список ссылок на дополнительные ресурсы",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-order": 7,
          "example": [
            "https://t.me/channely_bot",
            "https://t.me/channely_chat"
          ]
        },
        "is_bargain": {
          "description": "Возможен ли торг?",
          "type": "boolean",
          "x-order": 4
        },
        "monthly_income": {
          "description": "Доход в месяц",
          "type": "integer",
          "x-order": 5,
          "example": 7000
        },
        "price": {
          "description": "Цена канала",
          "type": "integer",
          "x-order": 3,
          "example": 124000
        },
        "query": {
          "description": "Запрос пользователя, @username или приватная ссылка.",
          "type": "string",
          "x-order": 0,
          "example": "@channely_updates"
        },
        "telegram_id": {
          "description": "ID канала в Telegram",
          "type": "integer",
          "x-order": 1,
          "example": -1001072262979
        },
        "topic_ids": {
          "description": "Список категорий лота",
          "type": "array",
          "items": {
            "type": "integer",
            "maxLength": 3,
            "minLength": 1
          },
          "x-order": 2,
          "example": [
            1,
            2
          ]
        }
      }
    },
    "LotMetrics": {
      "type": "object",
      "required": [
        "members_count",
        "daily_coverage",
        "monthly_income",
        "price_per_member",
        "price_per_view",
        "payback_period"
      ],
      "properties": {
        "daily_coverage": {
          "description": "Дневной охват",
          "type": "integer",
          "x-order": 1
        },
        "members_count": {
          "description": "Кол-во участников в канале",
          "type": "integer",
          "x-order": 0
        },
        "monthly_income": {
          "description": "Прибыль в месяц",
          "type": "integer",
          "x-order": 2
        },
        "payback_period": {
          "description": "Окупаемость",
          "type": "number",
          "x-order": 5
        },
        "price_per_member": {
          "description": "Цена за подписчика",
          "type": "number",
          "x-order": 3
        },
        "price_per_view": {
          "description": "Цена за просмотр",
          "type": "number",
          "x-order": 4
        }
      }
    },
    "LotPrice": {
      "type": "object",
      "required": [
        "current",
        "previous",
        "is_bargain"
      ],
      "properties": {
        "current": {
          "description": "Цена канала",
          "type": "integer",
          "x-order": 0
        },
        "is_bargain": {
          "description": "Возможен ли торг",
          "type": "boolean",
          "x-order": 2
        },
        "previous": {
          "description": "Предыдущая цена канала",
          "type": "integer",
          "x-order": 1
        }
      }
    },
    "OwnedLot": {
      "description": "Данные лота которым владает пользователь",
      "type": "object",
      "required": [
        "id",
        "external_id",
        "name",
        "avatar",
        "link",
        "bio",
        "price",
        "comment",
        "metrics",
        "topics",
        "extra",
        "created_at",
        "paid_at",
        "approved_at",
        "published_at"
      ],
      "properties": {
        "approved_at": {
          "description": "Дата проверки",
          "type": "integer",
          "x-order": 11
        },
        "avatar": {
          "description": "Аватарка лота",
          "type": "string",
          "format": "url",
          "x-order": 3
        },
        "bio": {
          "description": "Описаник канала с Telegram",
          "type": "string",
          "x-order": 5
        },
        "comment": {
          "description": "Комментарий к лоту",
          "type": "string",
          "x-order": 7
        },
        "created_at": {
          "description": "Дата создания",
          "type": "integer",
          "x-order": 9
        },
        "external_id": {
          "description": "ID лота в Telegram",
          "type": "integer",
          "x-order": 1
        },
        "extra": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LotExtraResource"
          },
          "x-order": 13
        },
        "id": {
          "description": "ID лота",
          "type": "integer",
          "x-order": 0
        },
        "link": {
          "description": "Ссылка для вступления (как приватная так и публичная)",
          "type": "string",
          "format": "url",
          "x-order": 4
        },
        "metrics": {
          "x-order": 8,
          "$ref": "#/definitions/LotMetrics"
        },
        "name": {
          "description": "Название лота (канала) в Telegram",
          "type": "string",
          "x-order": 2
        },
        "paid_at": {
          "description": "Дата оплаты",
          "type": "integer",
          "x-order": 10
        },
        "price": {
          "x-order": 6,
          "$ref": "#/definitions/LotPrice"
        },
        "published_at": {
          "description": "Дата публикации в канале",
          "type": "integer",
          "x-order": 14
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Topic"
          },
          "x-order": 12
        }
      }
    },
    "TelegramResolveResult": {
      "description": "Сущность соотвествующая запросу.",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Канал",
          "type": "object",
          "required": [
            "id",
            "name",
            "avatar",
            "members_count",
            "username",
            "daily_average",
            "description"
          ],
          "properties": {
            "avatar": {
              "description": "URL аватарки канала (может быть null)",
              "type": "string",
              "x-order": 2
            },
            "daily_average": {
              "description": "Среднее кол-во просмотров в день",
              "type": "integer",
              "x-order": 6
            },
            "description": {
              "description": "Описание",
              "type": "string",
              "x-order": 3
            },
            "id": {
              "description": "Уникальный ID канала в Telegrama",
              "type": "integer",
              "x-order": 0
            },
            "members_count": {
              "description": "Кол-во участников в канале",
              "type": "integer",
              "x-order": 4
            },
            "name": {
              "description": "Название канала",
              "type": "string",
              "x-order": 1
            },
            "username": {
              "description": "username канала (может быть null)",
              "type": "string",
              "x-order": 5
            }
          },
          "x-order": 0
        },
        "group": {
          "description": "Групповой чат",
          "type": "object",
          "required": [
            "id",
            "name",
            "avatar",
            "members_count",
            "username",
            "daily_average",
            "description"
          ],
          "properties": {
            "avatar": {
              "description": "URL аватарки чата (может быть null)",
              "type": "string",
              "x-order": 3
            },
            "description": {
              "description": "Описание",
              "type": "string",
              "x-order": 2
            },
            "id": {
              "description": "Уникальный ID чата в Telegrama",
              "type": "integer",
              "x-order": 0
            },
            "members_count": {
              "description": "Кол-во участников в чате",
              "type": "integer",
              "x-order": 4
            },
            "name": {
              "description": "Название чата",
              "type": "string",
              "x-order": 1
            },
            "username": {
              "description": "username чата (может быть null)",
              "type": "string",
              "x-order": 5
            }
          },
          "x-order": 1
        }
      }
    },
    "TelegramUpdate": {
      "x-go-type": {
        "import": {
          "alias": "tgbotapi",
          "package": "github.com/bots-house/telegram-bot-api"
        },
        "type": "Update"
      }
    },
    "Token": {
      "description": "Токен для доступа к API.",
      "required": [
        "token",
        "user"
      ],
      "properties": {
        "token": {
          "description": "JWT-токен для доступа к API.",
          "type": "string",
          "x-order": 0
        },
        "user": {
          "x-order": 1,
          "$ref": "#/definitions/User"
        }
      }
    },
    "Topic": {
      "description": "Категория лота",
      "type": "object",
      "required": [
        "id",
        "name",
        "slug",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "description": "Дата создания",
          "type": "integer",
          "x-order": 3
        },
        "id": {
          "description": "Уникальный ID категории.",
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "description": "Название категории на русском.",
          "type": "string",
          "x-order": 1
        },
        "slug": {
          "description": "Slug (уникальный)",
          "type": "string",
          "x-order": 2
        }
      }
    },
    "User": {
      "description": "Объект пользователя",
      "type": "object",
      "required": [
        "id",
        "telegram",
        "first_name",
        "last_name",
        "avatar",
        "is_admin",
        "joined_at"
      ],
      "properties": {
        "avatar": {
          "description": "Path to avatar",
          "type": "string",
          "x-order": 4
        },
        "first_name": {
          "description": "Имя пользователя в Telegram",
          "type": "string",
          "x-order": 2
        },
        "id": {
          "description": "Уникальный ID пользователя в Birzzha.",
          "type": "integer",
          "x-order": 0
        },
        "is_admin": {
          "description": "True, если пользователь админ Birzzha.",
          "type": "boolean",
          "x-order": 5
        },
        "joined_at": {
          "description": "Дата и время регистрации на бирже, в Unix-time.",
          "type": "integer",
          "x-order": 6
        },
        "last_name": {
          "description": "Фамилия пользователя в Telegram (может быть ` + "`" + `null` + "`" + `)",
          "type": "string",
          "x-order": 3
        },
        "telegram": {
          "description": "Информация о пользователе из Telegram",
          "type": "object",
          "required": [
            "id",
            "username"
          ],
          "properties": {
            "id": {
              "description": "ID пользователя в Telegram",
              "type": "integer",
              "x-order": 0
            },
            "username": {
              "description": "Username пользователя в Telegram",
              "type": "string",
              "x-order": 1
            }
          },
          "x-order": 1
        }
      }
    }
  },
  "parameters": {
    "RequestID": {
      "type": "string",
      "format": "uuid",
      "description": "Уникальный ID запроса. Используется для трейсинга.",
      "name": "X-Request-Id",
      "in": "header"
    }
  },
  "securityDefinitions": {
    "TokenHeader": {
      "type": "apiKey",
      "name": "X-Token",
      "in": "header"
    },
    "TokenQuery": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "TokenHeader": []
    },
    {
      "TokenQuery": []
    }
  ],
  "tags": [
    {
      "description": "Авторизация пользователя.\nТокен может быть передан через заголовок (` + "`" + `X-Token` + "`" + `) или query параметр (` + "`" + `token` + "`" + `).\nЕсли токен невалидный API вернет ответ  **403 Forbidden** или **401 Unauthorized**.\nТокены живут в течении 24 часов.\nВремя на передачу данных с виджета 1 минута.\n\n### 🔑 Авторизация через Telegram Login Widget\n\nДля авторизации данным способом нужен @username бота, для его получения нужно сделать запрос на ` + "`" + `GET /v1/bot` + "`" + `.\nПолучив данные от Telegram их нужно отправить на ` + "`" + `POST /v1/auth` + "`" + `.\n\n### 🤖 Авторизация через бота\n\n1. Фронтенд перенаправляет пользователя на ` + "`" + `/v1/auth/bot` + "`" + ` указывая ` + "`" + `callback_url` + "`" + `, на который пользователь должен будет вернутся;\n2. API перенаправляет пользователя в бота прокидывая deep-link параметр;\n3. Бот перенаправляет пользователя ` + "`" + `callback_url` + "`" + ` прокидывая параметры Login Widget в query string;\n\nВ качестве хоста в ` + "`" + `callback_url` + "`" + ` может выступать только некоторые домены, связанно ограничение с лимитами Telegram.\n\n| Env | Host |\n|:----|:-----|\n| Staging | dev.birzzha.me |\n| Production | birzzha.me  |\n",
      "name": "auth"
    },
    {
      "description": "🗄В данном разделе собранны методы для работы с каталогом со стороны пользователя.\n\nСуществуют следующие сущности:\n - категория объявления (` + "`" + `topic` + "`" + `)\n - объявление (` + "`" + `lot` + "`" + `)\n",
      "name": "catalog"
    },
    {
      "description": "Содержит методы для работы с ботом.\n",
      "name": "bot"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Birzzha",
    "version": "v1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/auth": {
      "post": {
        "security": [],
        "description": "Получение JWT-токена на основе данных авторизации от Telegram,\nполученных c [Telegram Login Widget](https://core.telegram.org/widgets/login) и [LoginUrl](https://core.telegram.org/bots/api#loginurl).\nТокен действителен в течении 24 часов, с момента создания.\n\nВозможные ошибки:\n  - ` + "`" + `telegram_widget_info_expired` + "`" + ` - если с момента получение данных с виджета прошло более 1 минуты;\n  - ` + "`" + `telegram_widget_info_invalid` + "`" + ` - если подпись данных (` + "`" + `hash` + "`" + `) невалидна;\n",
        "tags": [
          "auth"
        ],
        "summary": "Create Token",
        "operationId": "createToken",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный ID запроса. Используется для трейсинга.",
            "name": "X-Request-Id",
            "in": "header"
          },
          {
            "name": "payload",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InputAuth"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/bot": {
      "get": {
        "security": [],
        "description": "При переходе по этой ссылке пользователь будет перенаправлен в Telegram. Telegram бот перенаправит его на ` + "`" + `callback_url` + "`" + ` вместе с данными [LoginUrl](https://core.telegram.org/bots/api/#loginurl).",
        "tags": [
          "auth"
        ],
        "summary": "Login via Bot",
        "operationId": "loginViaBot",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный ID запроса. Используется для трейсинга.",
            "name": "X-Request-Id",
            "in": "header"
          },
          {
            "type": "string",
            "format": "url",
            "description": "URL для возврата",
            "name": "callback_url",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "type": "string",
                "format": "url"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/bot": {
      "get": {
        "security": [],
        "description": "Получение информации о боте\n",
        "tags": [
          "bot"
        ],
        "summary": "Get Bot Info",
        "operationId": "getBotInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BotInfo"
            }
          }
        }
      },
      "post": {
        "security": [],
        "description": "Обработка события от Telegram. S2S метод.\n",
        "tags": [
          "bot"
        ],
        "summary": "Handle Update",
        "operationId": "handleUpdate",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный ID запроса. Используется для трейсинга.",
            "name": "X-Request-Id",
            "in": "header"
          },
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelegramUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/lot": {
      "post": {
        "description": "Создание лота.\nПредварительно нужно получить ID канала через метод ` + "`" + `/tg/resolve` + "`" + ` и отправить его в запросе как ` + "`" + `telegram_id` + "`" + `.\n\n### Возможные ошибки\n\n| Status | Code | Description |\n|:---------|:--------------|:-----------------|\n| 400 | ` + "`" + `lot_is_not_channel` + "`" + ` | лот не является каналом |\n| 500 | ` + "`" + `internal_error` + "`" + ` | Внутреняя ошибка сервера |\n",
        "tags": [
          "catalog"
        ],
        "summary": "Create Lot",
        "operationId": "createLot",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LotInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OwnedLot"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tg/resolve": {
      "get": {
        "security": [],
        "description": "Возвращает информацию о Telegram-сущности (каналы и чат) по @username или приватной ссылке (в разработке).\nНаписание ссылки или @username **не важно** (есть протокол или нет, домен, @ в начала).\n\n### Пример запросов\n\n  - https://t.me/channely_updates\n  - t.me/crosser_live\n  - crosser_chat\n  - @zzapusk\n\n### Возможные ошибки\n\n| Status | Code | Description |\n|:---------|:--------------|:-----------------|\n| 400 | ` + "`" + `tg_invalid_query` + "`" + ` | Недопустимый формат ввода |\n| 400 | ` + "`" + `tg_entity_not_found` + "`" + ` | Сущность не найдена |\n| 500 | ` + "`" + `internal_error` + "`" + ` | Внутреняя ошибка сервера |\n",
        "tags": [
          "catalog"
        ],
        "summary": "Resolve Telegram Identity",
        "operationId": "resolveTelegram",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный ID запроса. Используется для трейсинга.",
            "name": "X-Request-Id",
            "in": "header"
          },
          {
            "type": "string",
            "description": "запрос пользователя",
            "name": "q",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TelegramResolveResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/topics": {
      "get": {
        "security": [],
        "description": "Получить список категорий.",
        "tags": [
          "catalog"
        ],
        "summary": "Get Topics",
        "operationId": "getTopics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Topic"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Возвращает информацию о текущем пользователе.",
        "tags": [
          "auth"
        ],
        "summary": "Get Current User",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Уникальный ID запроса. Используется для трейсинга.",
            "name": "X-Request-Id",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BotInfo": {
      "description": "Информация о боте",
      "required": [
        "name",
        "username",
        "auth_deep_link"
      ],
      "properties": {
        "auth_deep_link": {
          "description": "Значение параметра ` + "`" + `?start=` + "`" + ` который нужно передать при формировании URL для авторизации через ` + "`" + `LoginUrl` + "`" + `.",
          "type": "string",
          "x-order": 2
        },
        "name": {
          "description": "Имя бота",
          "type": "string",
          "x-order": 0
        },
        "username": {
          "description": "Юзернейм бота",
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "description": "Код ошибки",
          "type": "string",
          "enum": [
            "test"
          ],
          "x-order": 0
        },
        "description": {
          "description": "Описание ошибки",
          "type": "string",
          "x-order": 1
        }
      }
    },
    "Identity": {
      "x-go-type": {
        "import": {
          "alias": "authz",
          "package": "github.com/bots-house/birzzha/api/authz"
        },
        "type": "Identity"
      }
    },
    "InputAuth": {
      "description": "Данный полученные с [Telegram Login Widget](https://core.telegram.org/widgets/login) и [LoginUrl](https://core.telegram.org/bots/api#loginurl).",
      "required": [
        "id",
        "first_name",
        "auth_date",
        "hash"
      ],
      "properties": {
        "auth_date": {
          "description": "Дата авторизации пользователя (UNIX)",
          "type": "integer",
          "format": "int64",
          "x-order": 5
        },
        "first_name": {
          "description": "Имя пользователя в Telegram",
          "type": "string",
          "x-order": 1,
          "example": "Sasha"
        },
        "hash": {
          "description": "Подписи к данным.",
          "type": "string",
          "x-order": 6
        },
        "id": {
          "description": "ID пользователя в Telegram",
          "type": "integer",
          "x-order": 0,
          "example": 492933123
        },
        "last_name": {
          "description": "Фамилия пользователя в Telegram",
          "type": "string",
          "x-order": 2,
          "example": "Savchuk"
        },
        "photo_url": {
          "description": "Ссылка на авартку пользователя.",
          "type": "string",
          "format": "url",
          "x-order": 4
        },
        "username": {
          "description": "Username пользователя в Telegram",
          "type": "string",
          "x-order": 3
        }
      }
    },
    "LotExtraResource": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "url",
          "x-order": 0
        }
      }
    },
    "LotInput": {
      "description": "Данные для создания нового лота",
      "type": "object",
      "required": [
        "query",
        "telegram_id",
        "topic_ids",
        "price",
        "is_bargain",
        "monthly_income",
        "comment",
        "extra"
      ],
      "properties": {
        "comment": {
          "description": "Комментарий пользователя",
          "type": "string",
          "x-order": 6,
          "example": "Продаю дешевле, чем залил. Каналу месяц, налит свежим тг трафом за две недели. В канал вложено 250.000-260.000₽. Рекламу продаю последние 2 недели. Продаю, так как сам в телеграмме недавно, так поигрались с партнером, посмотрели что к чему, идем дальше!\n"
        },
        "extra": {
          "description": "Список ссылок на дополнительные ресурсы",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-order": 7,
          "example": [
            "https://t.me/channely_bot",
            "https://t.me/channely_chat"
          ]
        },
        "is_bargain": {
          "description": "Возможен ли торг?",
          "type": "boolean",
          "x-order": 4
        },
        "monthly_income": {
          "description": "Доход в месяц",
          "type": "integer",
          "x-order": 5,
          "example": 7000
        },
        "price": {
          "description": "Цена канала",
          "type": "integer",
          "x-order": 3,
          "example": 124000
        },
        "query": {
          "description": "Запрос пользователя, @username или приватная ссылка.",
          "type": "string",
          "x-order": 0,
          "example": "@channely_updates"
        },
        "telegram_id": {
          "description": "ID канала в Telegram",
          "type": "integer",
          "x-order": 1,
          "example": -1001072262979
        },
        "topic_ids": {
          "description": "Список категорий лота",
          "type": "array",
          "items": {
            "type": "integer",
            "maxLength": 3,
            "minLength": 1
          },
          "x-order": 2,
          "example": [
            1,
            2
          ]
        }
      }
    },
    "LotMetrics": {
      "type": "object",
      "required": [
        "members_count",
        "daily_coverage",
        "monthly_income",
        "price_per_member",
        "price_per_view",
        "payback_period"
      ],
      "properties": {
        "daily_coverage": {
          "description": "Дневной охват",
          "type": "integer",
          "x-order": 1
        },
        "members_count": {
          "description": "Кол-во участников в канале",
          "type": "integer",
          "x-order": 0
        },
        "monthly_income": {
          "description": "Прибыль в месяц",
          "type": "integer",
          "x-order": 2
        },
        "payback_period": {
          "description": "Окупаемость",
          "type": "number",
          "x-order": 5
        },
        "price_per_member": {
          "description": "Цена за подписчика",
          "type": "number",
          "x-order": 3
        },
        "price_per_view": {
          "description": "Цена за просмотр",
          "type": "number",
          "x-order": 4
        }
      }
    },
    "LotPrice": {
      "type": "object",
      "required": [
        "current",
        "previous",
        "is_bargain"
      ],
      "properties": {
        "current": {
          "description": "Цена канала",
          "type": "integer",
          "x-order": 0
        },
        "is_bargain": {
          "description": "Возможен ли торг",
          "type": "boolean",
          "x-order": 2
        },
        "previous": {
          "description": "Предыдущая цена канала",
          "type": "integer",
          "x-order": 1
        }
      }
    },
    "OwnedLot": {
      "description": "Данные лота которым владает пользователь",
      "type": "object",
      "required": [
        "id",
        "external_id",
        "name",
        "avatar",
        "link",
        "bio",
        "price",
        "comment",
        "metrics",
        "topics",
        "extra",
        "created_at",
        "paid_at",
        "approved_at",
        "published_at"
      ],
      "properties": {
        "approved_at": {
          "description": "Дата проверки",
          "type": "integer",
          "x-order": 11
        },
        "avatar": {
          "description": "Аватарка лота",
          "type": "string",
          "format": "url",
          "x-order": 3
        },
        "bio": {
          "description": "Описаник канала с Telegram",
          "type": "string",
          "x-order": 5
        },
        "comment": {
          "description": "Комментарий к лоту",
          "type": "string",
          "x-order": 7
        },
        "created_at": {
          "description": "Дата создания",
          "type": "integer",
          "x-order": 9
        },
        "external_id": {
          "description": "ID лота в Telegram",
          "type": "integer",
          "x-order": 1
        },
        "extra": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LotExtraResource"
          },
          "x-order": 13
        },
        "id": {
          "description": "ID лота",
          "type": "integer",
          "x-order": 0
        },
        "link": {
          "description": "Ссылка для вступления (как приватная так и публичная)",
          "type": "string",
          "format": "url",
          "x-order": 4
        },
        "metrics": {
          "x-order": 8,
          "$ref": "#/definitions/LotMetrics"
        },
        "name": {
          "description": "Название лота (канала) в Telegram",
          "type": "string",
          "x-order": 2
        },
        "paid_at": {
          "description": "Дата оплаты",
          "type": "integer",
          "x-order": 10
        },
        "price": {
          "x-order": 6,
          "$ref": "#/definitions/LotPrice"
        },
        "published_at": {
          "description": "Дата публикации в канале",
          "type": "integer",
          "x-order": 14
        },
        "topics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Topic"
          },
          "x-order": 12
        }
      }
    },
    "TelegramResolveResult": {
      "description": "Сущность соотвествующая запросу.",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Канал",
          "type": "object",
          "required": [
            "id",
            "name",
            "avatar",
            "members_count",
            "username",
            "daily_average",
            "description"
          ],
          "properties": {
            "avatar": {
              "description": "URL аватарки канала (может быть null)",
              "type": "string",
              "x-order": 2
            },
            "daily_average": {
              "description": "Среднее кол-во просмотров в день",
              "type": "integer",
              "x-order": 6
            },
            "description": {
              "description": "Описание",
              "type": "string",
              "x-order": 3
            },
            "id": {
              "description": "Уникальный ID канала в Telegrama",
              "type": "integer",
              "x-order": 0
            },
            "members_count": {
              "description": "Кол-во участников в канале",
              "type": "integer",
              "x-order": 4
            },
            "name": {
              "description": "Название канала",
              "type": "string",
              "x-order": 1
            },
            "username": {
              "description": "username канала (может быть null)",
              "type": "string",
              "x-order": 5
            }
          },
          "x-order": 0
        },
        "group": {
          "description": "Групповой чат",
          "type": "object",
          "required": [
            "id",
            "name",
            "avatar",
            "members_count",
            "username",
            "daily_average",
            "description"
          ],
          "properties": {
            "avatar": {
              "description": "URL аватарки чата (может быть null)",
              "type": "string",
              "x-order": 3
            },
            "description": {
              "description": "Описание",
              "type": "string",
              "x-order": 2
            },
            "id": {
              "description": "Уникальный ID чата в Telegrama",
              "type": "integer",
              "x-order": 0
            },
            "members_count": {
              "description": "Кол-во участников в чате",
              "type": "integer",
              "x-order": 4
            },
            "name": {
              "description": "Название чата",
              "type": "string",
              "x-order": 1
            },
            "username": {
              "description": "username чата (может быть null)",
              "type": "string",
              "x-order": 5
            }
          },
          "x-order": 1
        }
      }
    },
    "TelegramResolveResultChannel": {
      "description": "Канал",
      "type": "object",
      "required": [
        "id",
        "name",
        "avatar",
        "members_count",
        "username",
        "daily_average",
        "description"
      ],
      "properties": {
        "avatar": {
          "description": "URL аватарки канала (может быть null)",
          "type": "string",
          "x-order": 2
        },
        "daily_average": {
          "description": "Среднее кол-во просмотров в день",
          "type": "integer",
          "x-order": 6
        },
        "description": {
          "description": "Описание",
          "type": "string",
          "x-order": 3
        },
        "id": {
          "description": "Уникальный ID канала в Telegrama",
          "type": "integer",
          "x-order": 0
        },
        "members_count": {
          "description": "Кол-во участников в канале",
          "type": "integer",
          "x-order": 4
        },
        "name": {
          "description": "Название канала",
          "type": "string",
          "x-order": 1
        },
        "username": {
          "description": "username канала (может быть null)",
          "type": "string",
          "x-order": 5
        }
      },
      "x-order": 0
    },
    "TelegramResolveResultGroup": {
      "description": "Групповой чат",
      "type": "object",
      "required": [
        "id",
        "name",
        "avatar",
        "members_count",
        "username",
        "daily_average",
        "description"
      ],
      "properties": {
        "avatar": {
          "description": "URL аватарки чата (может быть null)",
          "type": "string",
          "x-order": 3
        },
        "description": {
          "description": "Описание",
          "type": "string",
          "x-order": 2
        },
        "id": {
          "description": "Уникальный ID чата в Telegrama",
          "type": "integer",
          "x-order": 0
        },
        "members_count": {
          "description": "Кол-во участников в чате",
          "type": "integer",
          "x-order": 4
        },
        "name": {
          "description": "Название чата",
          "type": "string",
          "x-order": 1
        },
        "username": {
          "description": "username чата (может быть null)",
          "type": "string",
          "x-order": 5
        }
      },
      "x-order": 1
    },
    "TelegramUpdate": {
      "x-go-type": {
        "import": {
          "alias": "tgbotapi",
          "package": "github.com/bots-house/telegram-bot-api"
        },
        "type": "Update"
      }
    },
    "Token": {
      "description": "Токен для доступа к API.",
      "required": [
        "token",
        "user"
      ],
      "properties": {
        "token": {
          "description": "JWT-токен для доступа к API.",
          "type": "string",
          "x-order": 0
        },
        "user": {
          "x-order": 1,
          "$ref": "#/definitions/User"
        }
      }
    },
    "Topic": {
      "description": "Категория лота",
      "type": "object",
      "required": [
        "id",
        "name",
        "slug",
        "created_at"
      ],
      "properties": {
        "created_at": {
          "description": "Дата создания",
          "type": "integer",
          "x-order": 3
        },
        "id": {
          "description": "Уникальный ID категории.",
          "type": "integer",
          "x-order": 0
        },
        "name": {
          "description": "Название категории на русском.",
          "type": "string",
          "x-order": 1
        },
        "slug": {
          "description": "Slug (уникальный)",
          "type": "string",
          "x-order": 2
        }
      }
    },
    "User": {
      "description": "Объект пользователя",
      "type": "object",
      "required": [
        "id",
        "telegram",
        "first_name",
        "last_name",
        "avatar",
        "is_admin",
        "joined_at"
      ],
      "properties": {
        "avatar": {
          "description": "Path to avatar",
          "type": "string",
          "x-order": 4
        },
        "first_name": {
          "description": "Имя пользователя в Telegram",
          "type": "string",
          "x-order": 2
        },
        "id": {
          "description": "Уникальный ID пользователя в Birzzha.",
          "type": "integer",
          "x-order": 0
        },
        "is_admin": {
          "description": "True, если пользователь админ Birzzha.",
          "type": "boolean",
          "x-order": 5
        },
        "joined_at": {
          "description": "Дата и время регистрации на бирже, в Unix-time.",
          "type": "integer",
          "x-order": 6
        },
        "last_name": {
          "description": "Фамилия пользователя в Telegram (может быть ` + "`" + `null` + "`" + `)",
          "type": "string",
          "x-order": 3
        },
        "telegram": {
          "description": "Информация о пользователе из Telegram",
          "type": "object",
          "required": [
            "id",
            "username"
          ],
          "properties": {
            "id": {
              "description": "ID пользователя в Telegram",
              "type": "integer",
              "x-order": 0
            },
            "username": {
              "description": "Username пользователя в Telegram",
              "type": "string",
              "x-order": 1
            }
          },
          "x-order": 1
        }
      }
    },
    "UserTelegram": {
      "description": "Информация о пользователе из Telegram",
      "type": "object",
      "required": [
        "id",
        "username"
      ],
      "properties": {
        "id": {
          "description": "ID пользователя в Telegram",
          "type": "integer",
          "x-order": 0
        },
        "username": {
          "description": "Username пользователя в Telegram",
          "type": "string",
          "x-order": 1
        }
      },
      "x-order": 1
    }
  },
  "parameters": {
    "RequestID": {
      "type": "string",
      "format": "uuid",
      "description": "Уникальный ID запроса. Используется для трейсинга.",
      "name": "X-Request-Id",
      "in": "header"
    }
  },
  "securityDefinitions": {
    "TokenHeader": {
      "type": "apiKey",
      "name": "X-Token",
      "in": "header"
    },
    "TokenQuery": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "TokenHeader": []
    },
    {
      "TokenQuery": []
    }
  ],
  "tags": [
    {
      "description": "Авторизация пользователя.\nТокен может быть передан через заголовок (` + "`" + `X-Token` + "`" + `) или query параметр (` + "`" + `token` + "`" + `).\nЕсли токен невалидный API вернет ответ  **403 Forbidden** или **401 Unauthorized**.\nТокены живут в течении 24 часов.\nВремя на передачу данных с виджета 1 минута.\n\n### 🔑 Авторизация через Telegram Login Widget\n\nДля авторизации данным способом нужен @username бота, для его получения нужно сделать запрос на ` + "`" + `GET /v1/bot` + "`" + `.\nПолучив данные от Telegram их нужно отправить на ` + "`" + `POST /v1/auth` + "`" + `.\n\n### 🤖 Авторизация через бота\n\n1. Фронтенд перенаправляет пользователя на ` + "`" + `/v1/auth/bot` + "`" + ` указывая ` + "`" + `callback_url` + "`" + `, на который пользователь должен будет вернутся;\n2. API перенаправляет пользователя в бота прокидывая deep-link параметр;\n3. Бот перенаправляет пользователя ` + "`" + `callback_url` + "`" + ` прокидывая параметры Login Widget в query string;\n\nВ качестве хоста в ` + "`" + `callback_url` + "`" + ` может выступать только некоторые домены, связанно ограничение с лимитами Telegram.\n\n| Env | Host |\n|:----|:-----|\n| Staging | dev.birzzha.me |\n| Production | birzzha.me  |\n",
      "name": "auth"
    },
    {
      "description": "🗄В данном разделе собранны методы для работы с каталогом со стороны пользователя.\n\nСуществуют следующие сущности:\n - категория объявления (` + "`" + `topic` + "`" + `)\n - объявление (` + "`" + `lot` + "`" + `)\n",
      "name": "catalog"
    },
    {
      "description": "Содержит методы для работы с ботом.\n",
      "name": "bot"
    }
  ]
}`))
}
