// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bots-house/birzzha/api/gen/models"
)

// AdminGetPostTextOKCode is the HTTP code returned for type AdminGetPostTextOK
const AdminGetPostTextOKCode int = 200

/*AdminGetPostTextOK OK

swagger:response adminGetPostTextOK
*/
type AdminGetPostTextOK struct {

	/*
	  In: Body
	*/
	Payload *models.AdminPostText `json:"body,omitempty"`
}

// NewAdminGetPostTextOK creates AdminGetPostTextOK with default headers values
func NewAdminGetPostTextOK() *AdminGetPostTextOK {

	return &AdminGetPostTextOK{}
}

// WithPayload adds the payload to the admin get post text o k response
func (o *AdminGetPostTextOK) WithPayload(payload *models.AdminPostText) *AdminGetPostTextOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the admin get post text o k response
func (o *AdminGetPostTextOK) SetPayload(payload *models.AdminPostText) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AdminGetPostTextOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AdminGetPostTextBadRequestCode is the HTTP code returned for type AdminGetPostTextBadRequest
const AdminGetPostTextBadRequestCode int = 400

/*AdminGetPostTextBadRequest Bad Request

swagger:response adminGetPostTextBadRequest
*/
type AdminGetPostTextBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAdminGetPostTextBadRequest creates AdminGetPostTextBadRequest with default headers values
func NewAdminGetPostTextBadRequest() *AdminGetPostTextBadRequest {

	return &AdminGetPostTextBadRequest{}
}

// WithPayload adds the payload to the admin get post text bad request response
func (o *AdminGetPostTextBadRequest) WithPayload(payload *models.Error) *AdminGetPostTextBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the admin get post text bad request response
func (o *AdminGetPostTextBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AdminGetPostTextBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AdminGetPostTextInternalServerErrorCode is the HTTP code returned for type AdminGetPostTextInternalServerError
const AdminGetPostTextInternalServerErrorCode int = 500

/*AdminGetPostTextInternalServerError Internal Server Error

swagger:response adminGetPostTextInternalServerError
*/
type AdminGetPostTextInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAdminGetPostTextInternalServerError creates AdminGetPostTextInternalServerError with default headers values
func NewAdminGetPostTextInternalServerError() *AdminGetPostTextInternalServerError {

	return &AdminGetPostTextInternalServerError{}
}

// WithPayload adds the payload to the admin get post text internal server error response
func (o *AdminGetPostTextInternalServerError) WithPayload(payload *models.Error) *AdminGetPostTextInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the admin get post text internal server error response
func (o *AdminGetPostTextInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AdminGetPostTextInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
