// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bots-house/birzzha/api/gen/models"
)

// LoginViaBotFoundCode is the HTTP code returned for type LoginViaBotFound
const LoginViaBotFoundCode int = 302

/*LoginViaBotFound Found

swagger:response loginViaBotFound
*/
type LoginViaBotFound struct {
	/*

	 */
	Location string `json:"Location"`
}

// NewLoginViaBotFound creates LoginViaBotFound with default headers values
func NewLoginViaBotFound() *LoginViaBotFound {

	return &LoginViaBotFound{}
}

// WithLocation adds the location to the login via bot found response
func (o *LoginViaBotFound) WithLocation(location string) *LoginViaBotFound {
	o.Location = location
	return o
}

// SetLocation sets the location to the login via bot found response
func (o *LoginViaBotFound) SetLocation(location string) {
	o.Location = location
}

// WriteResponse to the client
func (o *LoginViaBotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(302)
}

// LoginViaBotTooManyRequestsCode is the HTTP code returned for type LoginViaBotTooManyRequests
const LoginViaBotTooManyRequestsCode int = 429

/*LoginViaBotTooManyRequests Limit exceeded

swagger:response loginViaBotTooManyRequests
*/
type LoginViaBotTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLoginViaBotTooManyRequests creates LoginViaBotTooManyRequests with default headers values
func NewLoginViaBotTooManyRequests() *LoginViaBotTooManyRequests {

	return &LoginViaBotTooManyRequests{}
}

// WithPayload adds the payload to the login via bot too many requests response
func (o *LoginViaBotTooManyRequests) WithPayload(payload *models.Error) *LoginViaBotTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login via bot too many requests response
func (o *LoginViaBotTooManyRequests) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginViaBotTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// LoginViaBotInternalServerErrorCode is the HTTP code returned for type LoginViaBotInternalServerError
const LoginViaBotInternalServerErrorCode int = 500

/*LoginViaBotInternalServerError Internal Server Error

swagger:response loginViaBotInternalServerError
*/
type LoginViaBotInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewLoginViaBotInternalServerError creates LoginViaBotInternalServerError with default headers values
func NewLoginViaBotInternalServerError() *LoginViaBotInternalServerError {

	return &LoginViaBotInternalServerError{}
}

// WithPayload adds the payload to the login via bot internal server error response
func (o *LoginViaBotInternalServerError) WithPayload(payload *models.Error) *LoginViaBotInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the login via bot internal server error response
func (o *LoginViaBotInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LoginViaBotInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
