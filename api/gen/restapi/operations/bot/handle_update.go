// Code generated by go-swagger; DO NOT EDIT.

package bot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// HandleUpdateHandlerFunc turns a function with the right signature into a handle update handler
type HandleUpdateHandlerFunc func(HandleUpdateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HandleUpdateHandlerFunc) Handle(params HandleUpdateParams) middleware.Responder {
	return fn(params)
}

// HandleUpdateHandler interface for that can handle valid handle update params
type HandleUpdateHandler interface {
	Handle(HandleUpdateParams) middleware.Responder
}

// NewHandleUpdate creates a new http.Handler for the handle update operation
func NewHandleUpdate(ctx *middleware.Context, handler HandleUpdateHandler) *HandleUpdate {
	return &HandleUpdate{Context: ctx, Handler: handler}
}

/*HandleUpdate swagger:route POST /bot bot handleUpdate

Handle Update

Обработка события от Telegram. S2S метод.


*/
type HandleUpdate struct {
	Context *middleware.Context
	Handler HandleUpdateHandler
}

func (o *HandleUpdate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewHandleUpdateParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
