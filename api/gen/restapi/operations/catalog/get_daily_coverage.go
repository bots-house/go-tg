// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetDailyCoverageHandlerFunc turns a function with the right signature into a get daily coverage handler
type GetDailyCoverageHandlerFunc func(GetDailyCoverageParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDailyCoverageHandlerFunc) Handle(params GetDailyCoverageParams) middleware.Responder {
	return fn(params)
}

// GetDailyCoverageHandler interface for that can handle valid get daily coverage params
type GetDailyCoverageHandler interface {
	Handle(GetDailyCoverageParams) middleware.Responder
}

// NewGetDailyCoverage creates a new http.Handler for the get daily coverage operation
func NewGetDailyCoverage(ctx *middleware.Context, handler GetDailyCoverageHandler) *GetDailyCoverage {
	return &GetDailyCoverage{Context: ctx, Handler: handler}
}

/*GetDailyCoverage swagger:route GET /tg/daily-coverage catalog getDailyCoverage

Get daily coverage

Получения прироста количества просмотров за сутки. Обязательно указать channel_id

### Возможные ошибки
| Status | Code | Description |
|:---------|:--------------|:-----------------|
| 400 | `channel_not_found` | Канал не найден |
| 500 | `internal_error` | Внутреняя ошибка сервера |


*/
type GetDailyCoverage struct {
	Context *middleware.Context
	Handler GetDailyCoverageHandler
}

func (o *GetDailyCoverage) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetDailyCoverageParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
