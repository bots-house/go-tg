// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bots-house/birzzha/api/gen/models"
)

// GetLotOKCode is the HTTP code returned for type GetLotOK
const GetLotOKCode int = 200

/*GetLotOK OK

swagger:response getLotOK
*/
type GetLotOK struct {

	/*
	  In: Body
	*/
	Payload *models.FullLot `json:"body,omitempty"`
}

// NewGetLotOK creates GetLotOK with default headers values
func NewGetLotOK() *GetLotOK {

	return &GetLotOK{}
}

// WithPayload adds the payload to the get lot o k response
func (o *GetLotOK) WithPayload(payload *models.FullLot) *GetLotOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get lot o k response
func (o *GetLotOK) SetPayload(payload *models.FullLot) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLotOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLotBadRequestCode is the HTTP code returned for type GetLotBadRequest
const GetLotBadRequestCode int = 400

/*GetLotBadRequest Bad Request

swagger:response getLotBadRequest
*/
type GetLotBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLotBadRequest creates GetLotBadRequest with default headers values
func NewGetLotBadRequest() *GetLotBadRequest {

	return &GetLotBadRequest{}
}

// WithPayload adds the payload to the get lot bad request response
func (o *GetLotBadRequest) WithPayload(payload *models.Error) *GetLotBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get lot bad request response
func (o *GetLotBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLotBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLotInternalServerErrorCode is the HTTP code returned for type GetLotInternalServerError
const GetLotInternalServerErrorCode int = 500

/*GetLotInternalServerError Internal Server Error

swagger:response getLotInternalServerError
*/
type GetLotInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLotInternalServerError creates GetLotInternalServerError with default headers values
func NewGetLotInternalServerError() *GetLotInternalServerError {

	return &GetLotInternalServerError{}
}

// WithPayload adds the payload to the get lot internal server error response
func (o *GetLotInternalServerError) WithPayload(payload *models.Error) *GetLotInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get lot internal server error response
func (o *GetLotInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLotInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
