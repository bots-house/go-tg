// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSimilarLotsHandlerFunc turns a function with the right signature into a get similar lots handler
type GetSimilarLotsHandlerFunc func(GetSimilarLotsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSimilarLotsHandlerFunc) Handle(params GetSimilarLotsParams) middleware.Responder {
	return fn(params)
}

// GetSimilarLotsHandler interface for that can handle valid get similar lots params
type GetSimilarLotsHandler interface {
	Handle(GetSimilarLotsParams) middleware.Responder
}

// NewGetSimilarLots creates a new http.Handler for the get similar lots operation
func NewGetSimilarLots(ctx *middleware.Context, handler GetSimilarLotsHandler) *GetSimilarLots {
	return &GetSimilarLots{Context: ctx, Handler: handler}
}

/*GetSimilarLots swagger:route GET /lots/{id}/similars catalog getSimilarLots

Get Similar Lots

Получить похожие лоты.

*/
type GetSimilarLots struct {
	Context *middleware.Context
	Handler GetSimilarLotsHandler
}

func (o *GetSimilarLots) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSimilarLotsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
