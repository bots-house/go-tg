// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// HandleBotUpdateHandlerFunc turns a function with the right signature into a handle bot update handler
type HandleBotUpdateHandlerFunc func(HandleBotUpdateParams) middleware.Responder

// Handle executing the request and returning a response
func (fn HandleBotUpdateHandlerFunc) Handle(params HandleBotUpdateParams) middleware.Responder {
	return fn(params)
}

// HandleBotUpdateHandler interface for that can handle valid handle bot update params
type HandleBotUpdateHandler interface {
	Handle(HandleBotUpdateParams) middleware.Responder
}

// NewHandleBotUpdate creates a new http.Handler for the handle bot update operation
func NewHandleBotUpdate(ctx *middleware.Context, handler HandleBotUpdateHandler) *HandleBotUpdate {
	return &HandleBotUpdate{Context: ctx, Handler: handler}
}

/*HandleBotUpdate swagger:route POST /bot handleBotUpdate

Bot Webhook

*/
type HandleBotUpdate struct {
	Context *middleware.Context
	Handler HandleBotUpdateHandler
}

func (o *HandleBotUpdate) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewHandleBotUpdateParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
