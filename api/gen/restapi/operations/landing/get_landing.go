// Code generated by go-swagger; DO NOT EDIT.

package landing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetLandingHandlerFunc turns a function with the right signature into a get landing handler
type GetLandingHandlerFunc func(GetLandingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetLandingHandlerFunc) Handle(params GetLandingParams) middleware.Responder {
	return fn(params)
}

// GetLandingHandler interface for that can handle valid get landing params
type GetLandingHandler interface {
	Handle(GetLandingParams) middleware.Responder
}

// NewGetLanding creates a new http.Handler for the get landing operation
func NewGetLanding(ctx *middleware.Context, handler GetLandingHandler) *GetLanding {
	return &GetLanding{Context: ctx, Handler: handler}
}

/*GetLanding swagger:route GET /landing landing getLanding

Get Landing

Агрегация данных для рендеринга лендинга.

*/
type GetLanding struct {
	Context *middleware.Context
	Handler GetLandingHandler
}

func (o *GetLanding) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetLandingParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
