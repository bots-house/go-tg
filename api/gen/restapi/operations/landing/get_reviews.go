// Code generated by go-swagger; DO NOT EDIT.

package landing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetReviewsHandlerFunc turns a function with the right signature into a get reviews handler
type GetReviewsHandlerFunc func(GetReviewsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetReviewsHandlerFunc) Handle(params GetReviewsParams) middleware.Responder {
	return fn(params)
}

// GetReviewsHandler interface for that can handle valid get reviews params
type GetReviewsHandler interface {
	Handle(GetReviewsParams) middleware.Responder
}

// NewGetReviews creates a new http.Handler for the get reviews operation
func NewGetReviews(ctx *middleware.Context, handler GetReviewsHandler) *GetReviews {
	return &GetReviews{Context: ctx, Handler: handler}
}

/*GetReviews swagger:route GET /reviews landing getReviews

Get Reviews

Получить список отзывов.

*/
type GetReviews struct {
	Context *middleware.Context
	Handler GetReviewsHandler
}

func (o *GetReviews) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetReviewsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
