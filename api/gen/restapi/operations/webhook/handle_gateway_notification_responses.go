// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bots-house/birzzha/api/gen/models"
)

// HandleGatewayNotificationOKCode is the HTTP code returned for type HandleGatewayNotificationOK
const HandleGatewayNotificationOKCode int = 200

/*HandleGatewayNotificationOK OK

swagger:response handleGatewayNotificationOK
*/
type HandleGatewayNotificationOK struct {
}

// NewHandleGatewayNotificationOK creates HandleGatewayNotificationOK with default headers values
func NewHandleGatewayNotificationOK() *HandleGatewayNotificationOK {

	return &HandleGatewayNotificationOK{}
}

// WriteResponse to the client
func (o *HandleGatewayNotificationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// HandleGatewayNotificationBadRequestCode is the HTTP code returned for type HandleGatewayNotificationBadRequest
const HandleGatewayNotificationBadRequestCode int = 400

/*HandleGatewayNotificationBadRequest Bad Request

swagger:response handleGatewayNotificationBadRequest
*/
type HandleGatewayNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHandleGatewayNotificationBadRequest creates HandleGatewayNotificationBadRequest with default headers values
func NewHandleGatewayNotificationBadRequest() *HandleGatewayNotificationBadRequest {

	return &HandleGatewayNotificationBadRequest{}
}

// WithPayload adds the payload to the handle gateway notification bad request response
func (o *HandleGatewayNotificationBadRequest) WithPayload(payload *models.Error) *HandleGatewayNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the handle gateway notification bad request response
func (o *HandleGatewayNotificationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HandleGatewayNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HandleGatewayNotificationInternalServerErrorCode is the HTTP code returned for type HandleGatewayNotificationInternalServerError
const HandleGatewayNotificationInternalServerErrorCode int = 500

/*HandleGatewayNotificationInternalServerError Internal Server Error

swagger:response handleGatewayNotificationInternalServerError
*/
type HandleGatewayNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHandleGatewayNotificationInternalServerError creates HandleGatewayNotificationInternalServerError with default headers values
func NewHandleGatewayNotificationInternalServerError() *HandleGatewayNotificationInternalServerError {

	return &HandleGatewayNotificationInternalServerError{}
}

// WithPayload adds the payload to the handle gateway notification internal server error response
func (o *HandleGatewayNotificationInternalServerError) WithPayload(payload *models.Error) *HandleGatewayNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the handle gateway notification internal server error response
func (o *HandleGatewayNotificationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HandleGatewayNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
