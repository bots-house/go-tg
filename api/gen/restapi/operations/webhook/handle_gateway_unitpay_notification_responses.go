// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bots-house/birzzha/api/gen/models"
)

// HandleGatewayUnitpayNotificationOKCode is the HTTP code returned for type HandleGatewayUnitpayNotificationOK
const HandleGatewayUnitpayNotificationOKCode int = 200

/*HandleGatewayUnitpayNotificationOK OK

swagger:response handleGatewayUnitpayNotificationOK
*/
type HandleGatewayUnitpayNotificationOK struct {

	/*
	  In: Body
	*/
	Payload *models.UnitPaySuccessResp `json:"body,omitempty"`
}

// NewHandleGatewayUnitpayNotificationOK creates HandleGatewayUnitpayNotificationOK with default headers values
func NewHandleGatewayUnitpayNotificationOK() *HandleGatewayUnitpayNotificationOK {

	return &HandleGatewayUnitpayNotificationOK{}
}

// WithPayload adds the payload to the handle gateway unitpay notification o k response
func (o *HandleGatewayUnitpayNotificationOK) WithPayload(payload *models.UnitPaySuccessResp) *HandleGatewayUnitpayNotificationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the handle gateway unitpay notification o k response
func (o *HandleGatewayUnitpayNotificationOK) SetPayload(payload *models.UnitPaySuccessResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HandleGatewayUnitpayNotificationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HandleGatewayUnitpayNotificationBadRequestCode is the HTTP code returned for type HandleGatewayUnitpayNotificationBadRequest
const HandleGatewayUnitpayNotificationBadRequestCode int = 400

/*HandleGatewayUnitpayNotificationBadRequest Bad Request

swagger:response handleGatewayUnitpayNotificationBadRequest
*/
type HandleGatewayUnitpayNotificationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.UnitPayErrorResp `json:"body,omitempty"`
}

// NewHandleGatewayUnitpayNotificationBadRequest creates HandleGatewayUnitpayNotificationBadRequest with default headers values
func NewHandleGatewayUnitpayNotificationBadRequest() *HandleGatewayUnitpayNotificationBadRequest {

	return &HandleGatewayUnitpayNotificationBadRequest{}
}

// WithPayload adds the payload to the handle gateway unitpay notification bad request response
func (o *HandleGatewayUnitpayNotificationBadRequest) WithPayload(payload *models.UnitPayErrorResp) *HandleGatewayUnitpayNotificationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the handle gateway unitpay notification bad request response
func (o *HandleGatewayUnitpayNotificationBadRequest) SetPayload(payload *models.UnitPayErrorResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HandleGatewayUnitpayNotificationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HandleGatewayUnitpayNotificationInternalServerErrorCode is the HTTP code returned for type HandleGatewayUnitpayNotificationInternalServerError
const HandleGatewayUnitpayNotificationInternalServerErrorCode int = 500

/*HandleGatewayUnitpayNotificationInternalServerError Internal Server Error

swagger:response handleGatewayUnitpayNotificationInternalServerError
*/
type HandleGatewayUnitpayNotificationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.UnitPayErrorResp `json:"body,omitempty"`
}

// NewHandleGatewayUnitpayNotificationInternalServerError creates HandleGatewayUnitpayNotificationInternalServerError with default headers values
func NewHandleGatewayUnitpayNotificationInternalServerError() *HandleGatewayUnitpayNotificationInternalServerError {

	return &HandleGatewayUnitpayNotificationInternalServerError{}
}

// WithPayload adds the payload to the handle gateway unitpay notification internal server error response
func (o *HandleGatewayUnitpayNotificationInternalServerError) WithPayload(payload *models.UnitPayErrorResp) *HandleGatewayUnitpayNotificationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the handle gateway unitpay notification internal server error response
func (o *HandleGatewayUnitpayNotificationInternalServerError) SetPayload(payload *models.UnitPayErrorResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HandleGatewayUnitpayNotificationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
